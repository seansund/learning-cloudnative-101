{"componentChunkName":"component---src-pages-electives-api-connect-activities-importing-ap-is-mdx","path":"/electives/api-connect/activities/importingAPIs/","result":{"pageContext":{"frontmatter":{"title":"Importing APIs"},"relativePagePath":"/electives/api-connect/activities/importingAPIs.mdx","titleType":"page","MdxNode":{"id":"861aaaa5-f86b-5c96-82c7-d84825238266","children":[],"parent":"e5ddecee-d0a6-5503-8796-f4eb4b679b38","internal":{"content":"---\ntitle: Importing APIs\n---\n\nTo setup API Connect follow the instructions for [API Connect Access](./accessAPI).\n\n## Create a New Catalog \n\n- Once logged in, we will be on the API Connect Dashboard.\n\n![apidashboard](../images/apiconnect-dash.png)\n\n- Click the `Add` button in the upper left corner and select `Catalog`.\n\n- Name your catalog whatever you like, in this case we are using `Dev`.\n\n![apidev](../images/apiconnect-dev.png)\n\n- We will be using this catalog for all of our tutorials.\n\n## Create a New Product\n\n- Start by clicking on your catalog name from the main dashboard.\n\n- Click on the top left arrows button next to the catalog name.\n\n![product](../images/apiconnect-product.png)\n\n- Next, Select `Drafts`.\n\n![drafts](../images/apiconnect-drafts.png)\n\n- On the `Drafts` page, click on the `Add` button in the top left side. Then click `New Product`.\n\n![newproduct](../images/apinewproduct.png)\n\n- Fill in the `Product` info with the following:\n    - Title: `Development`\n    - Name: `Test`\n    - Version: `1.0.0`\n\n![apidev](../images/product-details.png)\n\n- Now a new Product named `Test` has been created. On the `Design` page all the details about the product can be changed.\n\n## Importing a New API\n\n- With a product created, now we can create a new API for that product.\n\n- Navigate back to the `Drafts` page.\n\n- Click on the top left arrows button next to the catalog name.\n\n![product](../images/apiconnect-product.png)\n\n- Next, Select `Drafts`.\n\n![drafts](../images/apiconnect-drafts.png)\n\n- Once on the `Drafts` page, Click on the `API's` tab in the top left.\n\n![apisimpo](../images/draft-apis.png)\n\n- Click `Add` -> `Import API from a file or URL`\n\n![import](../images/import.png)\n\n- Next Click `Or import from URL...`\n\n![import](../images/import-url.png)\n\n- Now in the `URL` paste `https://raw.githubusercontent.com/bkribbs15/nodejs-express-api/master/swagger.yaml`. Nothing is needed for the `Username` and `Password`, so click `Import`.\n\n![import](../images/import-link.png)\n\n- The API will now be imported in and you will be taken to the `Design` page of the API.\n\n## Testing the New API\n\n- To test the newly imported API, go to the `Assemble` page.\n\n![import](../images/import-assemble.png)\n\n- Now you will see all the operations that were imported in, and we can start the test by clicking the `test` button.\n\n![import](../images/import-test.png)\n\n- The API hasn't been added to the `Product` yet, so click on `Add API`.\n\n![add](../images/add-api.png)\n\n- Then `Republish` your `Product` in order for the API to go live.\n\n- Now we can choose an `Operation` to invoke. For the first one we will pick `/students`.\n\n![students](../images/operation-students.png)\n\n- With the operation chosen we can add any parameters the API would need, but in this case we don't need any so we can just press `Invoke`.\n\n- If everything is successful we will see response with a status of `200` and a JSON object like the one below. \n\n![add](../images/success.png)\n\n- That's it. We have successfully imported an API. Try out the other operations as well.\n\n\n","type":"Mdx","contentDigest":"c608cefef22bf1ae54844042dfa030c8","counter":582,"owner":"gatsby-plugin-mdx"},"exports":[],"rawBody":"---\ntitle: Importing APIs\n---\n\nTo setup API Connect follow the instructions for [API Connect Access](./accessAPI).\n\n## Create a New Catalog \n\n- Once logged in, we will be on the API Connect Dashboard.\n\n![apidashboard](../images/apiconnect-dash.png)\n\n- Click the `Add` button in the upper left corner and select `Catalog`.\n\n- Name your catalog whatever you like, in this case we are using `Dev`.\n\n![apidev](../images/apiconnect-dev.png)\n\n- We will be using this catalog for all of our tutorials.\n\n## Create a New Product\n\n- Start by clicking on your catalog name from the main dashboard.\n\n- Click on the top left arrows button next to the catalog name.\n\n![product](../images/apiconnect-product.png)\n\n- Next, Select `Drafts`.\n\n![drafts](../images/apiconnect-drafts.png)\n\n- On the `Drafts` page, click on the `Add` button in the top left side. Then click `New Product`.\n\n![newproduct](../images/apinewproduct.png)\n\n- Fill in the `Product` info with the following:\n    - Title: `Development`\n    - Name: `Test`\n    - Version: `1.0.0`\n\n![apidev](../images/product-details.png)\n\n- Now a new Product named `Test` has been created. On the `Design` page all the details about the product can be changed.\n\n## Importing a New API\n\n- With a product created, now we can create a new API for that product.\n\n- Navigate back to the `Drafts` page.\n\n- Click on the top left arrows button next to the catalog name.\n\n![product](../images/apiconnect-product.png)\n\n- Next, Select `Drafts`.\n\n![drafts](../images/apiconnect-drafts.png)\n\n- Once on the `Drafts` page, Click on the `API's` tab in the top left.\n\n![apisimpo](../images/draft-apis.png)\n\n- Click `Add` -> `Import API from a file or URL`\n\n![import](../images/import.png)\n\n- Next Click `Or import from URL...`\n\n![import](../images/import-url.png)\n\n- Now in the `URL` paste `https://raw.githubusercontent.com/bkribbs15/nodejs-express-api/master/swagger.yaml`. Nothing is needed for the `Username` and `Password`, so click `Import`.\n\n![import](../images/import-link.png)\n\n- The API will now be imported in and you will be taken to the `Design` page of the API.\n\n## Testing the New API\n\n- To test the newly imported API, go to the `Assemble` page.\n\n![import](../images/import-assemble.png)\n\n- Now you will see all the operations that were imported in, and we can start the test by clicking the `test` button.\n\n![import](../images/import-test.png)\n\n- The API hasn't been added to the `Product` yet, so click on `Add API`.\n\n![add](../images/add-api.png)\n\n- Then `Republish` your `Product` in order for the API to go live.\n\n- Now we can choose an `Operation` to invoke. For the first one we will pick `/students`.\n\n![students](../images/operation-students.png)\n\n- With the operation chosen we can add any parameters the API would need, but in this case we don't need any so we can just press `Invoke`.\n\n- If everything is successful we will see response with a status of `200` and a JSON object like the one below. \n\n![add](../images/success.png)\n\n- That's it. We have successfully imported an API. Try out the other operations as well.\n\n\n","frontmatter":{"title":"Importing APIs"},"fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/src/pages/electives/api-connect/activities/importingAPIs.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550"]}