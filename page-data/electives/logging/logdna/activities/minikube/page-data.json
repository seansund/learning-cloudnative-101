{"componentChunkName":"component---src-pages-electives-logging-logdna-activities-minikube-index-mdx","path":"/electives/logging/logdna/activities/minikube/","result":{"pageContext":{"frontmatter":{"title":"LogDNA on minikube","description":"Lab to show how to connect minikube to LogDNA"},"relativePagePath":"/electives/logging/logdna/activities/minikube/index.mdx","titleType":"page","MdxNode":{"id":"ab5860a5-3a7a-533e-b2c7-4c7d277df55c","children":[],"parent":"cf78c40d-f2a3-59a6-ad4f-5a380db3fe09","internal":{"content":"---\ntitle: LogDNA on minikube\ndescription: Lab to show how to connect minikube to LogDNA\n---\n\n<Accordion>\n  <AccordionItem title=\"1. Provisioning a LogDNA instance from the catalog\">\nTo provision an instance of LogDNA from the IBM Catalog catalog, complete the following steps:\n\n1. [Log in to the IBM Cloud console](https://cloud.ibm.com/login)\n\n1. Click **Catalog**. The list of the services that are available on IBM Catalog opens.\n\n1. To filter the list of services that is displayed, select the **Developer Tools** category.\n\n1. Click the **IBM Cloud Log Analysis with LogDNA** tile.\n\n1. Select the region. \n\n1. Select a service plan. By default, the **Lite** plan is set.\n\n    For more information about the service plans, see [Service plans](https://cloud.ibm.com/docs/Monitoring-with-Sysdig?topic=Monitoring-with-Sysdig-pricing_plans#pricing_plans).\n\n1. Enter a service name.\n\n1. Select a resource group. By default, the **Default** resource group is set.\n\n1. Click **Create**.\n\nAfter you provision an instance, \n\n* The *Observability* dashboard opens. \n* A service ID is automatically created. You can use this service ID to get the LogDNA access key for your instance. \n\nNext, configure a metric source by adding a LogDNA agent. This agent is responsible for collecting and forwarding logs to LogDNA. \n  </AccordionItem>\n</Accordion>\n\n<Accordion>\n  <AccordionItem title=\"2. Create minikube cluster\">\n\n1. Create the VM and ssh into it\n    ```bash\n    vagrant up\n    vagrant ssh\n    ```\n1. Run minikube start with the following command\n    ```bash\n    minikube start --driver=none\n    ```\n\n\n  </AccordionItem>\n</Accordion>\n\n\n<Accordion>\n  <AccordionItem title=\"3. Install LogDNA agent\">\n\n1. Setup the configuration variable for LogDNA Agent, replace the variables with valid values, you can get this from your LogDNA instance on IBM Cloud console:\n    ```bash\n    LOGDNA_ACCESS_KEY=\"INSERT KEY HERE\"\n    REGION=\"us-south | us-east | eu-de | eu-gb | jp-tok | au-syd\"\n    ```\n    - **LOGDNA_ACCESS_KEY** is the ingestion key for the instance that you previously created.\n    - **REGION** It the region where your logdna instance is located.\n1. Create a namespace `ibm-observe`\n    ```bash\n    kubectl create namespace ibm-observe \n    ```\n1. Create a kubernetes secret in the namesapce `ibm-observe` where the logdna agent will be install.\n    ```bash\n    (set -u; \\\n    kubectl create secret generic logdna-agent-key \\\n      --from-literal=logdna-agent-key=${LOGDNA_ACCESS_KEY} \\\n      -n ibm-observe \\\n    )\n    ```\n1. Run the following command to download the install script and execute\n    ```bash\n    (set -u; \\\n    kubectl create \\\n      -f https://assets.${REGION}.logging.cloud.ibm.com/clients/logdna-agent-ds.yaml \\\n      -n ibm-observe \\\n    )\n    ```\n1. Verify logdna agent is working\n    ```bash\n    kubectl get -n ibm-observe ds/logdna-agent\n    kubectl logs -n ibm-observe ds/logdna-agent\n    ```\n\n\n  </AccordionItem>\n</Accordion>\n\n<Accordion>\n  <AccordionItem title=\"4. Verify insgestion of logs\">\n\n- Open LogDNA\n- Select Views\n- Kubernetes messages should show up\n- [Navigating the Dashboard](https://docs.logdna.com/docs/how-to-use-the-dashboard)\n\n![logdna](./images/overview-dashboard.png)\n\n\n  </AccordionItem>\n</Accordion>\n\n<Accordion>\n  <AccordionItem title=\"5. Remove the LogDNA agent\">\n\n- Delete the namespace where the logdna agent is installed\n    ```bash\n    kubectl delete ns ibm-observe\n    ```\n\n\n  </AccordionItem>\n</Accordion>\n","type":"Mdx","contentDigest":"15dc854ab7e2a9ee81c3ae050fba6f44","counter":614,"owner":"gatsby-plugin-mdx"},"exports":[],"rawBody":"---\ntitle: LogDNA on minikube\ndescription: Lab to show how to connect minikube to LogDNA\n---\n\n<Accordion>\n  <AccordionItem title=\"1. Provisioning a LogDNA instance from the catalog\">\nTo provision an instance of LogDNA from the IBM Catalog catalog, complete the following steps:\n\n1. [Log in to the IBM Cloud console](https://cloud.ibm.com/login)\n\n1. Click **Catalog**. The list of the services that are available on IBM Catalog opens.\n\n1. To filter the list of services that is displayed, select the **Developer Tools** category.\n\n1. Click the **IBM Cloud Log Analysis with LogDNA** tile.\n\n1. Select the region. \n\n1. Select a service plan. By default, the **Lite** plan is set.\n\n    For more information about the service plans, see [Service plans](https://cloud.ibm.com/docs/Monitoring-with-Sysdig?topic=Monitoring-with-Sysdig-pricing_plans#pricing_plans).\n\n1. Enter a service name.\n\n1. Select a resource group. By default, the **Default** resource group is set.\n\n1. Click **Create**.\n\nAfter you provision an instance, \n\n* The *Observability* dashboard opens. \n* A service ID is automatically created. You can use this service ID to get the LogDNA access key for your instance. \n\nNext, configure a metric source by adding a LogDNA agent. This agent is responsible for collecting and forwarding logs to LogDNA. \n  </AccordionItem>\n</Accordion>\n\n<Accordion>\n  <AccordionItem title=\"2. Create minikube cluster\">\n\n1. Create the VM and ssh into it\n    ```bash\n    vagrant up\n    vagrant ssh\n    ```\n1. Run minikube start with the following command\n    ```bash\n    minikube start --driver=none\n    ```\n\n\n  </AccordionItem>\n</Accordion>\n\n\n<Accordion>\n  <AccordionItem title=\"3. Install LogDNA agent\">\n\n1. Setup the configuration variable for LogDNA Agent, replace the variables with valid values, you can get this from your LogDNA instance on IBM Cloud console:\n    ```bash\n    LOGDNA_ACCESS_KEY=\"INSERT KEY HERE\"\n    REGION=\"us-south | us-east | eu-de | eu-gb | jp-tok | au-syd\"\n    ```\n    - **LOGDNA_ACCESS_KEY** is the ingestion key for the instance that you previously created.\n    - **REGION** It the region where your logdna instance is located.\n1. Create a namespace `ibm-observe`\n    ```bash\n    kubectl create namespace ibm-observe \n    ```\n1. Create a kubernetes secret in the namesapce `ibm-observe` where the logdna agent will be install.\n    ```bash\n    (set -u; \\\n    kubectl create secret generic logdna-agent-key \\\n      --from-literal=logdna-agent-key=${LOGDNA_ACCESS_KEY} \\\n      -n ibm-observe \\\n    )\n    ```\n1. Run the following command to download the install script and execute\n    ```bash\n    (set -u; \\\n    kubectl create \\\n      -f https://assets.${REGION}.logging.cloud.ibm.com/clients/logdna-agent-ds.yaml \\\n      -n ibm-observe \\\n    )\n    ```\n1. Verify logdna agent is working\n    ```bash\n    kubectl get -n ibm-observe ds/logdna-agent\n    kubectl logs -n ibm-observe ds/logdna-agent\n    ```\n\n\n  </AccordionItem>\n</Accordion>\n\n<Accordion>\n  <AccordionItem title=\"4. Verify insgestion of logs\">\n\n- Open LogDNA\n- Select Views\n- Kubernetes messages should show up\n- [Navigating the Dashboard](https://docs.logdna.com/docs/how-to-use-the-dashboard)\n\n![logdna](./images/overview-dashboard.png)\n\n\n  </AccordionItem>\n</Accordion>\n\n<Accordion>\n  <AccordionItem title=\"5. Remove the LogDNA agent\">\n\n- Delete the namespace where the logdna agent is installed\n    ```bash\n    kubectl delete ns ibm-observe\n    ```\n\n\n  </AccordionItem>\n</Accordion>\n","frontmatter":{"title":"LogDNA on minikube","description":"Lab to show how to connect minikube to LogDNA"},"fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/src/pages/electives/logging/logdna/activities/minikube/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550"]}