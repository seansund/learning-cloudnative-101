(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{inc8:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return O}));var a=n("wx14"),r=n("zLVn"),b=(n("q1tI"),n("7ljp")),c=n("013z"),o=(n("qKvR"),{}),i=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(b.b)("div",t)}},l=i("AnchorLinks"),s=i("AnchorLink"),p=i("Tabs"),m=i("Tab"),d={_frontmatter:o},u=c.a;function O(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)(u,Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)(l,{small:!0,mdxType:"AnchorLinks"},Object(b.b)(s,{mdxType:"AnchorLink"},"Multi-Containers Pod"),Object(b.b)(s,{mdxType:"AnchorLink"},"Activities")),Object(b.b)("h1",null,"Multi-Containers Pod"),Object(b.b)("p",null,"Container images solve many real-world problems with existing packaging and deployment tools, but in addition to these significant benefits, containers offer us an opportunity to fundamentally re-think the way we build distributed applications. Just as service oriented architectures (SOA) encouraged the decomposition of applications into modular, focused services, containers should encourage the further decomposition of these services into closely cooperating modular containers.  By virtue of establishing a boundary, containers enable users to build their services using modular, reusable components, and this in turn leads to services that are more reliable, more scalable and faster to build than applications built from monolithic containers."),Object(b.b)("h2",null,"Resources"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"OpenShift")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"IKS")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/cluster-administration/logging/#using-a-sidecar-container-with-the-logging-agent"}),"Sidecar Logging")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"https://kubernetes.io/docs/tasks/access-application-cluster/communicate-containers-same-pod-shared-volume/"}),"Shared Volume Communication")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"https://kubernetes.io/blog/2015/06/the-distributed-system-toolkit-patterns/"}),"Toolkit Patterns")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/45406.pdf"}),"Brendan Burns Paper"))),Object(b.b)("h2",null,"References"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  volumes:\n  - name: shared-data\n    emptyDir: {}\n  containers:\n  - name: app\n    image: bitnami/nginx\n    volumeMounts:\n      - name: shared-data\n        mountPath: /app\n    ports:\n    - containerPort: 8080\n  - name: sidecard\n    image: busybox\n    volumeMounts:\n    - name: shared-data\n      mountPath: /pod-data\n    command: ['sh', '-c', 'echo Hello from the side container > /pod-data/index.html && sleep 3600']\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  shareProcessNamespace: true\n  containers:\n  - name: app\n    image: bitnami/nginx\n    ports:\n    - containerPort: 8080\n  - name: sidecard\n    image: busybox\n    securityContext:\n      capabilities:\n        add:\n        - SYS_PTRACE\n    stdin: true\n    tty: true\n")),Object(b.b)(p,{mdxType:"Tabs"},Object(b.b)(m,{label:"OpenShift",mdxType:"Tab"},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Attach Pods Together "),"  "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"oc attach -it my-pod -c sidecard\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"ps ax\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"kill -HUP 7\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"ps ax\n"))),Object(b.b)(m,{label:"IKS",mdxType:"Tab"},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"}," Attach Pods Together ")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"kubectl attach -it my-pod -c sidecard\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"ps ax\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"kill -HUP 7\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"ps ax\n")))),Object(b.b)("h2",null,"Activities"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Task"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Link"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"td"},Object(b.b)("em",{parentName:"strong"}," Try It Yourself "))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Multiple Containers"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Build a container using legacy container image."),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"../kube-overview/activities/labs/lab3"}),"Multiple Containers"))))))}O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-lectures-kube-multi-container-pods-index-mdx-c728da674b6c3929fac1.js.map