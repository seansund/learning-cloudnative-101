{"version":3,"sources":["webpack:///./src/pages/electives/eda/activities/labs/lab2/solution.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,8CACA,sBACE,kBAAIC,WAAW,MAAf,qBAA0C,0BAAYA,WAAW,MAAvB,UAA1C,QAAsG,0BAAYA,WAAW,MAAvB,cAAtG,iDACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,kEACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sCACpB,kBAAIA,WAAW,MAAf,4CAAiE,0BAAYA,WAAW,MAAvB,sCAAjE,mEAAoN,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC9P,UAAa,kBADsN,4YAYzO,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sBACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,uDACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,oDACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sDAEtB,8CACA,sBACE,kBAAIA,WAAW,MAAf,qBAA0C,0BAAYA,WAAW,MAAvB,QAA1C,QAAoG,0BAAYA,WAAW,MAAvB,QAApG,iDACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,kEACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sCACpB,kBAAIA,WAAW,MAAf,4CAAiE,0BAAYA,WAAW,MAAvB,sCAAjE,mEAAoN,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC9P,UAAa,kBADsN,4YAYzO,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sBACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,uDACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,oDACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,oDACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,yDAEtB,8CACA,sBACE,kBAAIA,WAAW,MAAf,qBAA0C,0BAAYA,WAAW,MAAvB,UAA1C,QAAsG,0BAAYA,WAAW,MAAvB,UAAtG,iDACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,kEACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sCACpB,kBAAIA,WAAW,MAAf,4CAAiE,0BAAYA,WAAW,MAAvB,sCAAjE,mEAAoN,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC9P,UAAa,kBADsN,4YAYzO,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sBACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,uDACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,6DAM1BJ,EAAWK,gBAAiB","file":"component---src-pages-electives-eda-activities-labs-lab-2-solution-mdx-2927881a98fa8f453dcb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Solution - sample-01`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Create the topics `}<inlineCode parentName=\"li\">{`topic1`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`topic1.DLT`}</inlineCode>{` in your IBM Event Streams on Cloud instance.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`git clone https://github.com/spring-projects/spring-kafka.git`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`cd spring-kafka/samples/sample-01`}</inlineCode></li>\n      <li parentName=\"ol\">{`Include the necessary credentials in the `}<inlineCode parentName=\"li\">{`src/main/resources/application.yml`}</inlineCode>{` file by merging the existing contents with the structure below:`}<pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`spring:\nkafka:\n bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n ssl:\n   protocol: TLSv1.2\n properties:\n   sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n   sasl.mechanism: PLAIN\n   security.protocol: SASL_SSL\n`}</code></pre></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`mvn clean package`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`java -jar target/kafka-sample-01-2.4.4.RELEASE.jar`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`curl -X POST http://localhost:8080/send/foo/bar`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`curl -X POST http://localhost:8080/send/foo/fail`}</inlineCode></li>\n    </ol>\n    <h2>{`Solution - sample-02`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Create the topics `}<inlineCode parentName=\"li\">{`foos`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`bars`}</inlineCode>{` in your IBM Event Streams on Cloud instance.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`git clone https://github.com/spring-projects/spring-kafka.git`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`cd spring-kafka/samples/sample-02`}</inlineCode></li>\n      <li parentName=\"ol\">{`Include the necessary credentials in the `}<inlineCode parentName=\"li\">{`src/main/resources/application.yml`}</inlineCode>{` file by merging the existing contents with the structure below:`}<pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`spring:\nkafka:\n bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n ssl:\n   protocol: TLSv1.2\n properties:\n   sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n   sasl.mechanism: PLAIN\n   security.protocol: SASL_SSL\n`}</code></pre></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`mvn clean package`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`java -jar target/kafka-sample-02-2.4.4.RELEASE.jar`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`curl -X POST http://localhost:8080/send/foo/bar`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`curl -X POST http://localhost:8080/send/bar/baz`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`curl -X POST http://localhost:8080/send/unknown/xxx`}</inlineCode></li>\n    </ol>\n    <h2>{`Solution - sample-03`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Create the topics `}<inlineCode parentName=\"li\">{`topic2`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`topic3`}</inlineCode>{` in your IBM Event Streams on Cloud instance.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`git clone https://github.com/spring-projects/spring-kafka.git`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`cd spring-kafka/samples/sample-03`}</inlineCode></li>\n      <li parentName=\"ol\">{`Include the necessary credentials in the `}<inlineCode parentName=\"li\">{`src/main/resources/application.yml`}</inlineCode>{` file by merging the existing contents with the structure below:`}<pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`spring:\nkafka:\n bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n ssl:\n   protocol: TLSv1.2\n properties:\n   sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n   sasl.mechanism: PLAIN\n   security.protocol: SASL_SSL\n`}</code></pre></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`mvn clean package`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`java -jar target/kafka-sample-03-2.4.4.RELEASE.jar`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`curl -X POST http://localhost:8080/send/foos/a,b,c,d,e`}</inlineCode></li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}